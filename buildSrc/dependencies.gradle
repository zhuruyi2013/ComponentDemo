subprojects {
    dependencies {
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'com.android.support.test:runner:1.0.2'
        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
        testImplementation 'org.mockito:mockito-core:2.13.0'
        testImplementation "io.mockk:mockk:1.8.6"

        implementation Libs.kotlinJDK

        implementation Libs.support_appcompat_v7

        final def projectName = project.getName()
        if (projectName != 'basemodule') {
            println("project " + projectName + " apply arouter")
            api Libs.ARouterLib
            kapt Libs.ARouterCompiler
            implementation project(':basemodule')
            if (projectName != 'routemodule') {
                implementation project(':routemodule')
            }
        }
    }
}

project(':app') {

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

    dependencies {


        implementation fileTree(include: ['*.jar'], dir: 'libs')
        implementation fileTree(include: ['*.aar'], dir: 'libs')

        implementation Libs.constraint

        if (!project(':secondmodule').isApplication.toBoolean()) {
            implementation project(':secondmodule')
        }

        if (!project(':thirdmodule').isApplication.toBoolean()) {
            implementation project(':thirdmodule')
        }


//        implementation(Libs.qmLib) {
//            exclude group: 'com.android.support', module: 'appcompat-v7'
//            exclude group: 'com.android.support', module: 'constraint'
//            exclude group: 'com.github.bumptech.glide', module: 'glide'
//        }
    }
}

project(":basemodule") {
    dependencies {
//        implementation Libs.libRxKotlin
    }
}

project(":routemodule") {
    dependencies {
        api Libs.libRxKotlin
    }
}

project(":secondmodule") {
    dependencies {
        implementation Libs.constraint
    }
}

project(":thirdmodule") {
    dependencies {
        implementation Libs.constraint
    }
}

//project(':xxxModule') {
//    dependencies {
//        api fileTree(dir: 'libs', include: ['*.jar'])
//        implementation Libs.kotlinReflectLib
//        compileOnly Libs.libGson
//        api Libs.dadaWidgetLib
//        api Libs.dadaFrameworkLib
//    }
//}
